CREATE USER company_rep_adm WITH PASSWORD 'comprep';


create table status_ref
(
    status_id   bigint       not null
        primary key,
    status_code varchar(100) not null
        unique,
    status_name varchar(120) not null
);

alter table status_ref
    owner to company_rep_adm;

create table core_entities
(
    core_entity_id bigint not null
        primary key,
    status_id      bigint
        references status_ref,
    create_date    timestamp default now(),
    delete_date    timestamp
);

alter table core_entities
    owner to company_rep_adm;

create table company
(
    company_id   bigint       not null
        primary key
        references core_entities,
    company_code varchar(100) not null
        unique,
    name         varchar(255) not null,
    industry     varchar(255),
    website      varchar(255)
);

alter table company
    owner to company_rep_adm;

create table source
(
    source_id   bigint       not null
        primary key
        references core_entities,
    source_code varchar(100) not null
        unique,
    name        varchar(255) not null,
    url         varchar(255) not null
        unique
);

alter table source
    owner to company_rep_adm;

create table sentiment_type_ref
(
    sentiment_type_id   bigint       not null
        primary key
        references core_entities,
    sentiment_type_code varchar(100) not null
        unique,
    sentiment_name      varchar(20)  not null
);

alter table sentiment_type_ref
    owner to company_rep_adm;

create table review
(
    review_id         bigint       not null
        primary key
        references core_entities,
    review_code       varchar(100) not null
        unique,
    company_id        bigint
        references company
            on delete cascade,
    source_id         bigint
                                   references source
                                       on delete set null,
    rating            integer
        constraint review_rating_check
            check ((rating >= 1) AND (rating <= 5)),
    content           text         not null,
    sentiment_type_id bigint
        references sentiment_type_ref,
    reviewer_name     varchar(255),
    published_at      timestamp
);

alter table review
    owner to company_rep_adm;

create table role_ref
(
    role_ref_id bigint       not null
        primary key
        references core_entities,
    role_code   varchar(100) not null
        unique,
    role_name   varchar(100) not null
);

alter table role_ref
    owner to company_rep_adm;

create table company_user
(
    user_id       bigint       not null
        primary key
        references core_entities,
    user_code     varchar(100) not null
        unique,
    company_id    bigint
        references company
            on delete cascade,
    role_ref_id   bigint
        references role_ref,
    username      varchar(255) not null,
    email         varchar(255) not null
        unique,
    password_hash text         not null
);

alter table company_user
    owner to company_rep_adm;

create table feedback
(
    feedback_id       bigint       not null
        primary key,
    feedback_code     varchar(100) not null
        unique,
    company_id        bigint
        references company
            on delete cascade,
    source_id         bigint
                                   references source
                                       on delete set null,
    type              varchar(20)  not null
        constraint feedback_type_check
            check ((type)::text = ANY
                   (ARRAY [('mention'::character varying)::text, ('review'::character varying)::text])),
    rating            integer
        constraint feedback_rating_check
            check ((rating >= 1) AND (rating <= 5)),
    content           text         not null,
    sentiment_type_id bigint
        references sentiment_type_ref,
    published_at      timestamp
);

alter table feedback
    owner to company_rep_adm;

create table response
(
    response_id   bigint       not null
        primary key,
    response_code varchar(100) not null
        unique,
    feedback_id   bigint
        references feedback
            on delete cascade,
    company_id    bigint
        references company
            on delete cascade,
    response_text text         not null
);

alter table response
    owner to company_rep_adm;

