CREATE USER company_rep_adm WITH PASSWORD 'comprep';
create table status_ref
(
    status_id   bigint       not null
        primary key,
    status_code varchar(100) not null
        unique,
    status_name varchar(120) not null
);

alter table status_ref
    owner to company_rep_adm;

create table core_entities
(
    core_entity_id bigint not null
        primary key,
    status_id      bigint
        references status_ref,
    create_date    timestamp default now(),
    delete_date    timestamp
);

alter table core_entities
    owner to company_rep_adm;

create table company
(
    company_id   bigint       not null
        primary key
        constraint company_id_fk
            references core_entities
            on delete cascade,
    company_code varchar(100) not null
        unique,
    name         varchar(255) not null,
    industry     varchar(255),
    website      varchar(255)
);

alter table company
    owner to company_rep_adm;

create table source_ref
(
    source_id bigint       not null
        constraint source_pkey
            primary key,
    name      varchar(255) not null,
    url       varchar(255) not null
        constraint source_url_key
            unique
);

alter table source_ref
    owner to company_rep_adm;

create table sentiment_type_ref
(
    sentiment_type_id   bigint       not null
        primary key,
    sentiment_type_code varchar(100) not null
        unique,
    sentiment_name      varchar(20)  not null
);

alter table sentiment_type_ref
    owner to company_rep_adm;

create table review
(
    review_id         bigint       not null
        primary key
        references core_entities,
    review_code       varchar(100) not null
        unique,
    company_id        bigint       not null
        references company
            on delete cascade,
    source_id         bigint
                                   references source_ref
                                       on delete set null,
    rating            integer
        constraint review_rating_check
            check ((rating >= 0) AND (rating <= 5)),
    content           text         not null,
    sentiment_type_id bigint
        references sentiment_type_ref,
    reviewer_name     varchar(255),
    published_date    timestamp
);

alter table review
    owner to company_rep_adm;

create unique index unique_review_md5_idx
    on review (md5(content), company_id);

create index idx_review_content_company
    on review (md5(content), company_id);

create table role_ref
(
    role_ref_id bigint       not null
        primary key,
    role_code   varchar(100) not null
        unique,
    role_name   varchar(100) not null
);

alter table role_ref
    owner to company_rep_adm;

create table company_user
(
    user_id       bigint       not null
        primary key
        constraint user_id_fkey
            references core_entities,
    user_code     varchar(100) not null
        unique,
    role_ref_id   bigint
        references role_ref,
    username      varchar(255) not null,
    email         varchar(255) not null
        unique,
    password_hash text         not null
);

alter table company_user
    owner to company_rep_adm;

create table feedback
(
    feedback_id       bigint       not null
        primary key,
    feedback_code     varchar(100) not null
        unique,
    company_id        bigint       not null
        references company
            on delete cascade,
    source_id         integer      not null
        references source_ref
            on delete set null,
    type              varchar(20)  not null
        constraint feedback_type_check
            check ((type)::text = ANY
                   (ARRAY [('mention'::character varying)::text, ('review'::character varying)::text])),
    rating            integer
        constraint feedback_rating_check
            check ((rating >= 1) AND (rating <= 5)),
    content           text         not null,
    sentiment_type_id bigint
        references sentiment_type_ref
);

alter table feedback
    owner to company_rep_adm;

create table user_company_roles
(
    user_company_roles_id bigserial
        constraint user_company_roles_id
            primary key,
    user_id               bigint not null
        constraint fk_user_company_roles_user_id
            references company_user,
    company_id            bigint not null
        constraint fk_user_company_roles_company_id
            references company
            on delete cascade,
    role                  bigint not null
        constraint user_company_roles_role_ref_role_ref_id_fk
            references role_ref
);

alter table user_company_roles
    owner to company_rep_adm;

create table company_source_url
(
    company_source_url_id   bigint                               not null
        primary key
        constraint company_source_url_id_fk
            references core_entities
            on delete cascade,
    company_id              bigint                               not null
        constraint company_source_url_company_fk
            references company
            on delete cascade,
    source_url              varchar(255)                         not null,
    company_source_url_code varchar default unique_key_recheck() not null,
    source_type             bigint                               not null
);

alter table company_source_url
    owner to postgres;

