CREATE USER company_rep_adm WITH PASSWORD 'comprep';

create table public.status_ref
(
    status_id   serial
        primary key,
    status_code varchar(100) not null
        unique,
    status_name varchar(120) not null
);

alter table public.status_ref
    owner to company_rep_adm;

create table public.core_entities
(
    core_entity_id serial
        primary key,
    status_id      bigint
        references public.status_ref,
    create_date    timestamp default now(),
    delete_date    timestamp
);

alter table public.core_entities
    owner to company_rep_adm;

create table public.company
(
    company_id   serial
        primary key
        references public.core_entities,
    company_code varchar(100) not null
        unique,
    name         varchar(255) not null,
    industry     varchar(255),
    website      varchar(255)
);

alter table public.company
    owner to company_rep_adm;

create table public.source
(
    source_id   serial
        primary key
        references public.core_entities,
    source_code varchar(100) not null
        unique,
    name        varchar(255) not null,
    url         varchar(255) not null
        unique
);

alter table public.source
    owner to company_rep_adm;

create table public.sentiment_type_ref
(
    sentiment_type_id   bigint       not null
        primary key,
    sentiment_type_code varchar(100) not null
        unique,
    sentiment_name      varchar(20)  not null
);

alter table public.sentiment_type_ref
    owner to company_rep_adm;

create table public.review
(
    review_id         serial
        primary key
        references public.core_entities,
    review_code       varchar(100) not null
        unique,
    company_id        serial
        references public.company
            on delete cascade,
    source_id         serial
                                   references public.source
                                       on delete set null,
    rating            integer
        constraint review_rating_check
            check ((rating >= 1) AND (rating <= 5)),
    content           text         not null,
    sentiment_type_id bigint
        references public.sentiment_type_ref,
    reviewer_name     varchar(255),
    published_at      timestamp
);

alter table public.review
    owner to company_rep_adm;

create table public.role_ref
(
    role_ref_id bigint       not null
        primary key,
    role_code   varchar(100) not null
        unique,
    role_name   varchar(100) not null
);

alter table public.role_ref
    owner to company_rep_adm;

create table public.company_user
(
    user_id       serial
        primary key
        constraint user_id_fkey
            references public.core_entities,
    user_code     varchar(100) not null
        unique,
    role_ref_id   bigint
        references public.role_ref,
    username      varchar(255) not null,
    email         varchar(255) not null
        unique,
    password_hash text         not null
);

alter table public.company_user
    owner to company_rep_adm;

create table public.feedback
(
    feedback_id       serial
        primary key,
    feedback_code     varchar(100) not null
        unique,
    company_id        serial
        references public.company
            on delete cascade,
    source_id         serial
                                   references public.source
                                       on delete set null,
    type              varchar(20)  not null
        constraint feedback_type_check
            check ((type)::text = ANY
                   (ARRAY [('mention'::character varying)::text, ('review'::character varying)::text])),
    rating            integer
        constraint feedback_rating_check
            check ((rating >= 1) AND (rating <= 5)),
    content           text         not null,
    sentiment_type_id bigint
        references public.sentiment_type_ref,
    published_at      timestamp
);

alter table public.feedback
    owner to company_rep_adm;

create table public.response
(
    response_id   serial
        primary key,
    response_code varchar(100) not null
        unique,
    feedback_id   serial
        references public.feedback
            on delete cascade,
    company_id    serial
        references public.company
            on delete cascade,
    response_text text         not null
);

alter table public.response
    owner to company_rep_adm;

create table public.user_company_roles
(
    user_company_roles_id bigserial
        constraint user_company_roles_id
            primary key,
    user_id               bigint not null
        constraint fk_user_company_roles_user_id
            references public.company_user,
    company_id            bigint not null
        constraint fk_user_company_roles_company_id
            references public.company,
    role                  bigint not null
        constraint user_company_roles_role_ref_role_ref_id_fk
            references public.role_ref
);

alter table public.user_company_roles
    owner to company_rep_adm;

